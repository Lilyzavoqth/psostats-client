{{define "game"}}
    <html>
    <head>
        <title>PSOStats</title>
        <link href="/main.css" rel="stylesheet" type="text/css">
        <script src='https://code.jquery.com/jquery-1.11.3.min.js'></script>
        <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
    </head>
    <body>
    <div class="outer-container">
        <header>
            <h1><a href="/">PSOStats</a></h1>
        </header>
        <div class="body">
            <table>
                <tr><td>Quest Name:</td><td>{{ .Game.QuestName }}</td></tr>
                <tr><td>Episode:</td><td>{{ .Game.Episode }}</td></tr>
                <tr><td>Difficulty:</td><td>{{ .Game.Difficulty }}</td></tr>
                <tr><td>Quest Duration:</td><td>{{ .Game.QuestDuration }}</td></tr>
                <tr><td>Category:</td><td>{{ len .Game.AllPlayers }}p {{ if .Game.PbCategory}}PB{{else}}No-PB{{end}}</td></tr>
                <tr><td>Deaths:</td><td>{{ .Game.DeathCount }}</td></tr>
                <tr><td>Enemies Killed:</td><td>{{ .Game.MonstersDead }}</td></tr>
                {{ if gt .Game.FTUsed 0 }}<tr><td>FT Used:</td><td>{{ .Game.FTUsed }}</td></tr> {{ end }}
                {{ if gt .Game.DTUsed 0 }}<tr><td>DT Used:</td><td>{{ .Game.DTUsed }}</td></tr> {{ end }}
                {{ if gt .Game.CTUsed 0 }}<tr><td>CT Used:</td><td>{{ .Game.CTUsed }}</td></tr> {{ end }}
                {{ if gt .Game.TPUsed 0 }}<tr><td>TP Used:</td><td>{{ .Game.TPUsed }}</td></tr> {{ end }}
                <tr><td>Submitted By:</td><td><a href="/players/{{ .Game.GuildCard }}">{{ .Game.GuildCard }}</a></td></tr>
            </table>
            <table>
                <tr><th>Players</th></tr>
                {{$outer := .Game}}
                {{ range .Game.AllPlayers }} <tr><td>{{ .Class }} (Lv.{{ .Level }}) <a href="/gc/{{ $outer.Server }}+{{ .GuildCard }}">{{ .Name }}</a></td></tr> {{ end }}
                <tr><td></td></tr>
            </table>
            <table>
                <tr><th>Weapons Used</th></tr>
                {{ range .Game.WeaponsUsed }} <tr><td>{{ . }}</td></tr> {{ end}}
            </table>

            <div id="weapon-donut" style="width: 500px; margin: 0 35px auto"></div>

            <div id="hp-chart" style="width: 500px; margin: 0 35px auto"></div>
            <div id="monsters-alive-chart" style="width: 500px; margin: 0 35px auto"></div>
            <div id="monsters-killed-chart" style="width: 500px; margin: 0 35px auto"></div>
            <div id="sd-chart" style="width: 500px; margin: 0 35px auto"></div>
            <div id="meseta-chart" style="width: 500px; margin: 0 35px auto"></div>
            {{ if gt .Game.FTUsed 0 }}<div id="ft-chart" style="width: 500px; margin: 0 35px auto"></div>{{end}}
        </div>
    </div>
    </body>
    </html>
        <script>
            const options = {
                title: {
                    text: 'HP'
                },
                chart: {
                    id: 'hptp',
                    type: 'line',
                    group: "group1",
                },
                series: [{
                    name: 'HP',
                    data: [{{ range .Game.HP }} {{ . }} , {{ end }}],
                    color: '#a43a3a'
                }{{if gt .Game.TPUsed 0}},{
                    name: 'TP',
                    data: [{{ range .Game.TP }} {{ . }} , {{ end }}],
                    color: '#64bcf2'
                } {{end}}],
                xaxis: { tickAmount: 10 },
                yaxis: {
                    labels: {
                        minWidth: 40
                    }
                },
                annotations: {
                    xaxis: [
                        {{ range .Game.Events }}{x: {{ .Second }}, label: { text: '{{ .Description }}' }},{{ end }}
                        {{ range $key, $value := .InvincibleRanges }}{x: {{ $key }}, x2: {{ $value }}, opacity: 0.6, fillColor: '#ffd412'},{{ end }}
                    ]
                }
            };
            const monstersAliveOptions = {
                title: {
                    text: 'Monsters Alive'
                },
                chart: {
                    id: 'monstersAlive',
                    type: 'area',
                    group: "group1",
                },
                series: [{
                    name: 'Monsters Alive',
                    data: [{{ range .Game.MonsterCount }} {{ . }} , {{ end }}],
                    color: '#333333'
                }],
                xaxis: { tickAmount: 10 },
                dataLabels: {
                    enabled: false
                },
                annotations: {
                    xaxis: [
                        {{ range .Game.Events }}
                        {x: {{ .Second }}, label: { text: '{{ .Description }}' }},
                        {{ end }}
                    ]
                }
            }
            const monstersKilledOptions = {
                title: {
                    text: 'Monsters Killed'
                },
                chart: {
                    id: 'monstersKilled',
                    type: 'area',
                    group: "group1",
                },
                series: [{
                    name: 'Monsters Killed',
                    data: [{{ range .Game.MonstersKilledCount }} {{ . }} , {{ end }}],
                    color: '#333333'
                }],
                xaxis: { tickAmount: 10 },
                dataLabels: {
                    enabled: false
                },
                annotations: {
                    xaxis: [
                        {{ range .Game.Events }}
                        {x: {{ .Second }}, label: { text: '{{ .Description }}' }},
                        {{ end }}
                    ]
                }
            }
            const sdOptions = {
                title: {
                    text: 'Shifta/Deband'
                },
                chart: {
                    id: 'sd',
                    type: 'area',
                    group: "group1",
                },
                series: [{
                    name: 'Shifta',
                    data: [{{ range .Game.ShiftaLvl }} {{ . }} , {{ end }}],
                    color: '#a43a3a'
                },{
                    name: 'Deband',
                    data: [{{ range .Game.DebandLvl }} {{ . }} , {{ end }}],
                    color: '#64bcf2'
                }],
                xaxis: { tickAmount: 10 },
                dataLabels: {
                    enabled: false
                },
                annotations: {
                    xaxis: [
                        {{ range .Game.Events }}
                        {x: {{ .Second }}, label: { text: '{{ .Description }}' }},
                        {{ end }}
                    ]
                }
            }
            const mesetaOptions = {
                title: {
                    text: 'Meseta Charged'
                },
                chart: {
                    id: 'meseta',
                    type: 'area',
                    group: "group1",
                },
                series: [{
                    name: 'Meseta Charged',
                    data: [{{ range .Game.MesetaCharged }} {{ . }} , {{ end }}],
                    color: '#b08313'
                }],
                xaxis: { tickAmount: 10 },
                dataLabels: {
                    enabled: false
                },
                annotations: {
                    xaxis: [
                        {{ range .Game.Events }}
                        {x: {{ .Second }}, label: { text: '{{ .Description }}' }},
                        {{ end }}
                    ]
                }
            }
            const hpChart = new ApexCharts(document.querySelector("#hp-chart"), options);
            hpChart.render();
            const monstersAliveChart = new ApexCharts(document.querySelector("#monsters-alive-chart"), monstersAliveOptions);
            monstersAliveChart.render();
            const monstersKilledChart = new ApexCharts(document.querySelector("#monsters-killed-chart"), monstersKilledOptions);
            monstersKilledChart.render();
            const sdChart = new ApexCharts(document.querySelector("#sd-chart"), sdOptions);
            sdChart.render();
            const mesetaChart = new ApexCharts(document.querySelector("#meseta-chart"), mesetaOptions);
            mesetaChart.render();
            {{ if gt .Game.FTUsed 0 }}
            const ftOptions = {
                title: {
                    text: 'Freeze Traps'
                },
                chart: {
                    id: 'ft',
                    type: 'line',
                    group: "group1",
                },
                series: [{
                    name: 'FT',
                    data: [{{ range .Game.FreezeTraps }} {{ . }} , {{ end }}],
                    color: '#64bcf2'
                }],
                xaxis: { tickAmount: 10 },
                annotations: {
                    xaxis: [
                        {{ range .Game.Events }}
                        {x: {{ .Second }}, label: { text: '{{ .Description }}' }},
                        {{ end }}
                    ]
                }
            }
            const ftChart = new ApexCharts(document.querySelector("#ft-chart"), ftOptions);
            ftChart.render();
            {{ end }}

            const weaponDonutOptions = {
                series: [ {{ range $key, $value := .Game.EquipmentUsedTime.Weapon }} {{ $value }}, {{ end }}],
                labels: [ {{ range $key, $value := .Game.EquipmentUsedTime.Weapon }} "{{ $key }}", {{ end }}],
                chart: {
                    type: 'donut',
                },
                title: {
                    text: "Weapons Used"
                },
                responsive: [{
                    breakpoint: 480,
                    options: {
                        chart: {
                            width: 200
                        },
                        legend: {
                            position: 'bottom'
                        }
                    }
                }]
            };

            const weaponDonutChart = new ApexCharts(document.querySelector("#weapon-donut"), weaponDonutOptions);
            weaponDonutChart.render();

        </script>
{{end}}