{{define "index"}}
    {{ $root := . }}
    <html lang="en">
    <head>
        <meta name="viewport" content="width=device-width"/>
        <meta property="og:site_name" content="PSOStats"/>
        <meta property="og:title" content="Ephinea Anniversary 2022"/>
        <meta property="og:description" content="Statistics and records for Ephinea's 7th anniversary event"/>
        <title>PSOStats - Anniversary 2022</title>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x" crossorigin="anonymous">
        <link href="/static/main2.css" rel="stylesheet" type="text/css">
        <script src='https://code.jquery.com/jquery-1.11.3.min.js'></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.8.2/chart.min.js" integrity="sha512-zjlf0U0eJmSo1Le4/zcZI51ks5SjuQXkU0yOdsOBubjSmio9iCUp8XPLkEAADZNBdR9crRy3cniZ65LF2w8sRA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/chartjs-plugin-annotation/2.0.0/chartjs-plugin-annotation.min.js" integrity="sha512-sLZhA8NE4bIPKMnsROQpJTBKVOQf8ie2GMFVXVfcg90tJ0aNhAWxhPyN0BRjwvZ35dSQF7kSzXtCU11KvWvNwQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
        <script src="https://cdn.jsdelivr.net/npm/luxon@^2"></script>
        <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-luxon@^1"></script>
    </head>
    <style>
        .episode-header {
            background-color: #222;
            border-top-left-radius: 10px;
            border-top-right-radius: 10px;
            padding-top: 8px;
            margin-top: 8px;
        }
        .psostats-chart {
            background-color: #444;
            margin-bottom: 4px;
        }
    </style>
    <body>
    <div class="container">
        {{ template "navbar" }}
        <div class="row">
            <div class="col">
                <h1>Ephinea Anniversary 2022</h1>
            </div>
        </div>

        <div class="row episode-header">
            <div class="col">
                <h2>Total Games - {{ .OverallCounter.Runs }}</h2>
            </div>
        </div>

        <div class="row psostats-chart">
            <div class="col-12" style="height: 400px">
                <canvas id="daily-quest-counts" style="height: 400px"></canvas>
            </div>
        </div>

{{/*        <div class="row psostats-chart">*/}}
{{/*            <div class="col-12" style="height: 400px; width: 400px">*/}}
{{/*                <canvas id="overall-class-use"></canvas>*/}}
{{/*            </div>*/}}
{{/*        </div>*/}}

        <div class="row episode-header">
            <div class="col">
                <h2>Overall Lap</h2>
            </div>
        </div>

        <div class="row psostats-chart">
            <div class="col-12">
                <table class="table table-dark">
                    <thead>
                    <tr><th scope="col">Overall</th><th scope="col">Player</th>
                        <th scope="col">Forest</th>
                        <th scope="col">Cave</th>
                        <th scope="col">Mine</th>
                        <th scope="col">Ruins</th>
                        <th scope="col">Temple</th>
                        <th scope="col">Space</th>
                        <th scope="col">CCA</th>
                        <th scope="col">Seabed</th>
                        <th scope="col">Tower</th>
                        <th scope="col">Crater</th>
                        <th scope="col">Desert</th></tr>
                    </thead>
                    {{ range .TopLaps }}
                        <tr>
                            <th scope="row">{{ .Total }}</th>
                            <td><a href="/players/{{ .User }}">{{ .User }}</a> </td>
                            {{ $playerLap := . }}
                            {{ range $index, $time := .Times }}
                            <td style="background-color: {{ index $playerLap.Colors $index }}">{{if gt (len (index $playerLap.GameIds $index)) 0}} <a href="/gamev3/{{index $playerLap.GameIds $index}}">{{ $time }}</a>{{else}}N/A{{end}}</td>
                            {{ end }}
                        </tr>
                    {{ end }}
                </table>
            </div>
        </div>

        <div class="row psostats-chart">
            {{ range $questIndex,$quest := .QuestNames }}
                {{ $questMap := (index $root.Records $quest) }}
                {{ $counters := (index $root.QuestCounters $quest)}}
                <div class="col-12 episode-header">
                    <div class="col">
                        <h2>{{$quest}} - {{$counters.Runs}} Games</h2>
                    </div>
                </div>

                <div class="col-12">
                <div class="row">
                    {{ range $category, $game := $questMap }}
                        <div class="col-6 col-sm-3 mt-3">
                            <h3>{{$game.NumPlayers}}P<img src="/static/shifta_cropped.png" height="24px" width="24px" alt="No-PB" title="No-PB" style="margin-bottom: 4px"/><a href="/gamev3/{{$game.Id}}">{{$game.Time}}</a></h3>
                            {{ range $index,$player := $game.Players }}
                                <div><span style="width:85px; display: inline-block">{{$player.Class}}</span>{{$player.Name}}</div>
                            {{ end }}
                        </div>
                    {{ end }}
                </div>
                </div>
                    <div class="col-12">
                        <canvas id="{{index $root.QuestShortNames $questIndex}}-record-history"></canvas>
                    </div>
                <div class="col-sm-4">
                    <canvas id="{{index $root.QuestShortNames $questIndex}}-class-use"></canvas>
                </div>
                <div class="col-sm-4">
                    <canvas id="{{index $root.QuestShortNames $questIndex}}-sid-use"></canvas>
                </div>

                <div class="col-sm-3">
                        <table class="table table-dark">
                            <tr>
                                <th scope="row">Meseta Charged</th>
                                <td>{{$counters.MesetaCharged}}</td>
                            </tr>
                            <tr>
                                <th scope="row">Deaths</th>
                                <td>{{$counters.Deaths}}</td>
                            </tr>
                        </table>
                    </div>
            {{ end }}
        </div>
    </div>
    </body>
    </html>
    <script>
        function getColorForQuest(questName) {
            switch (questName) {
                case "Maximum Attack E: Forest": return "#e9f5db";
                case "Maximum Attack E: Caves": return "#b5c99a";
                case "Maximum Attack E: Mines": return "#97a97c";
                case "Maximum Attack E: Ruins": return "#718355";
                case "Maximum Attack E: Temple": return "#a9d6e5";
                case "Maximum Attack E: Space": return "#61a5c2";
                case "Maximum Attack E: CCA": return "#2c7da0";
                case "Maximum Attack E: Seabed": return "#01497c";
                case "Maximum Attack E: Tower": return "#012a4a";
                case "Maximum Attack E: Crater": return "#f8961e";
                case "Maximum Attack E: Desert": return "#f94144";
            }
        }
        const dailyQuestContext = document.getElementById("daily-quest-counts");
        const dailyQuestChart = new Chart(dailyQuestContext, {
            type: "bar",
            data: {
                labels: [ {{ range $day, $count := .OverallCounter.RunsByDay }} new Date({{ $day.UnixMilli }}).toLocaleDateString(),{{ end }} ],
                datasets: [
                    {{ range $quest := $root.QuestNames }}
                    {
                        label: "{{ $quest }}",
                        data: [ {{ range $day, $count := $root.OverallCounter.RunsByDay }} {{ index (index (index $root.QuestCounters $quest).RunsByDay) $day }},{{ end }} ],
                        backgroundColor: getColorForQuest("{{ $quest }}"),
                    },
                    {{ end }}
                    ],
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,

            },
            scales: {
                x: {
                    stacked: true,
                }
            }
        });
        const classLabels = [ "HUmr", "HUnl", "HUct", "HUcl", "RAmr", "RAml", "RAct", "RAcl", "FOmr", "FOml", "FOnm", "FOnl"];
        const sectionIdLabels = ["Viridia", "Greenill", "Skyly", "Bluefull", "Purplenum", "Pinkal", "Redria", "Oran", "Yellowboze", "Whitill",];
        const sectionIdColors = ["#017203", "#11DC11", "#00E7E6", "#0001E9", "#AC3AE7", "#E69293", "#E90002", "#E67300", "#E8E700", "#E8E8E8",]
        const classColors = ["#ff0028", "#ff7e8a", "#6b1e31", "#803442", "#48ff00", "#7eff80", "#346b1e", "#3e8034", "#0059ff", "#7eb2ff", "#1e4b6b", "#345a80",];
        const overallClassUse = [{{ range $root.Classes }}{{index $root.OverallCounter.ClassUse .Name}}, {{ end }}]
        const questClassUse = {
            {{ range $quest,$counters := $root.QuestCounters }}"{{$quest}}": [{{ range $root.Classes}}{{index $counters.ClassUse .Name}}, {{ end }}],
            {{ end }}
        }
        const questSidUse = {
            {{ range $quest,$counters := $root.QuestCounters }}"{{$quest}}": [{{ range $root.SectionIds}}{{index $counters.SID .}}, {{ end }}],
            {{ end }}
        }


        {{ range $questIndex,$questName := $root.QuestNames }}
        {{$shortName := (index $root.QuestShortNames $questIndex)}}
        const {{$shortName}}RecContext = document.getElementById("{{$shortName}}-record-history");
        new Chart({{$shortName}}RecContext, {
            type: "line",
            data: {
                labels: [{{ range (index $root.RecordHistory $questName)}} {{ .Time.UnixMilli }}, {{ end }}],
                datasets: [
                    {label: "1P", data: [{{ range (index $root.RecordHistory $questName)}} {{ if .P1 }} {{ .P1.Time.Seconds }} {{ else }} 0 {{ end }}, {{ end }}], borderColor: "rgba(255,100,100,0.5)",backgroundColor: "rgba(255,100,100,0.5)", stepped: true},
                    {label: "2P", data: [{{ range (index $root.RecordHistory $questName)}} {{ if .P2 }} {{ .P2.Time.Seconds }} {{ else }} 0 {{ end }}, {{ end }}], borderColor: "rgba(255,255,100,0.5)",backgroundColor: "rgba(255,255,100,0.5)", stepped: true},
                    {label: "3P", data: [{{ range (index $root.RecordHistory $questName)}} {{ if .P3 }} {{ .P3.Time.Seconds }} {{ else }} 0 {{ end }}, {{ end }}], borderColor: "rgba(100,100,255,0.5)",backgroundColor: "rgba(100,100,255,0.5)", stepped: true},
                    {label: "4P", data: [{{ range (index $root.RecordHistory $questName)}} {{ if .P4 }} {{ .P4.Time.Seconds }} {{ else }} 0 {{ end }}, {{ end }}], borderColor: "rgba(100,255,100,0.5)",backgroundColor: "rgba(100,255,100,0.5)", stepped: true},
                ],
            },  options: {
                interaction: {
                    mode: 'index', intersect: false,
                },
                responsive: true,
                plugins: {title: {display: false}},
                scales: {
                    x: {
                        type: 'time',
                        time: {
                            // Luxon format string
                            tooltipFormat: 'DD T'
                        },
                        title: {
                            display: true,
                            text: 'Date'
                        }
                    },
                },
            },
        });

        const {{$shortName}}ClassContext = document.getElementById("{{$shortName}}-class-use");
        new Chart({{$shortName}}ClassContext, {
            type: "pie",
            data: {
                labels: classLabels,
                datasets: [{data: questClassUse["{{$questName}}"], backgroundColor: classColors,}]
            },  options: {
                responsive: true,
                plugins: {title: {display: false}}
            },
        });
        const {{$shortName}}SidContext = document.getElementById("{{$shortName}}-sid-use");
        new Chart({{$shortName}}SidContext, {
            type: "pie",
            data: {
                labels: sectionIdLabels,
                datasets: [{data: questSidUse["{{$questName}}"], backgroundColor: sectionIdColors,}]
            },  options: {
                responsive: true,
                plugins: {title: {display: false}}
            },
        });

        {{ end }}

        // const overallClassContext = document.getElementById("overall-class-use");
        // const overallClassChart = new Chart(overallClassContext, {
        //     type: "pie",
        //     data: {
        //         labels: classLabels,
        //         datasets: [{data: overallClassUse, backgroundColor: classColors,}]
        //     },  options: {
        //         responsive: true,
        //         plugins: {title: {display: false}}
        //     },
        // });
    </script>
{{end}}